@page "/courses/{id:guid}"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>HESIMS - Course Detail</PageTitle>

<h3>Course Detail</h3>

<div class="btn-group">
    <NavLink href="courses" class="btn btn-primary btn-sm" aria-current="page">Course List</NavLink>
    <NavLink href="courses/new" class="btn btn-primary btn-sm" aria-current="page">Add Course</NavLink>
</div>
<br />
<br />

@if (Course != null)
{
    <div class="col-8">
        <form>
            <input type="hidden" @bind="Course.CourseId" />
            <div class="form-group">
                <label>Course Name</label>
                <input @bind="Course.CourseName" class="form-control" placeholder="Course name">
            </div><br />
            <div class="form-group">
                <label>Institution</label>
                <input @bind="Course.Institution" class="form-control" placeholder="Institution">
            </div><br />
            <div class="form-group">
                <label>Duration</label>
                <input @bind="Course.Duration" type="number" class="form-control" placeholder="Course duration">
            </div><br />
            <div class="form-group">
                <label>Course Level</label>
                <input @bind="Course.CourseLevel" class="form-control" placeholder="Course Level">
            </div><br />
            <div class="form-group">
                <label>Country</label>
                <input @bind="Course.InstitutionCountry" class="form-control" placeholder="Country">
            </div><br />
            <button @onclick="Submit" class="btn btn-danger btn-sm" type="submit">Submit</button>
        </form>
    </div>
}

@code {

    [Parameter] public Guid Id { get; set; }

    public CourseViewModel? Course { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Course = await Http.GetFromJsonAsync<CourseViewModel>($"{NavigationManager.BaseUri}api/courses/{Id}");
    }

    async Task Submit()
    {
        if (Course != null)
        {
            await Http.PutAsJsonAsync<CourseViewModel>($"{NavigationManager.BaseUri}api/courses/{Id}", Course);
            NavigationManager.NavigateTo($"{NavigationManager.BaseUri}courses/{Id}");
        }
    }

    async Task DeleteCourse()
    {
        await Http.DeleteAsync($"api/courses/{Id}");
        NavigationManager.NavigateTo("/courses");
    }

}
