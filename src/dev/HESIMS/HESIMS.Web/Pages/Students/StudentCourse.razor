@inject HttpClient Http
@inject NavigationManager NavigationManager

<h6 class="pt-3">Course</h6>
<hr class="mb-2" />
<NavLink href="@($"students/{StudentId}/courses/add")" class="btn btn-outline-secondary btn-sm">Add Course</NavLink>

@if (courses is not null && courses.Any())
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Scholarship</th>
                <th>Course</th>
                <th>Institution</th>
                <th>Country</th>
                <th>Entry Year</th>
                <th>Duration</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var course in courses)
            {
                <tr>
                    <td>@course.Scholarship?.ScholarshipName</td>
                    <td>@course.Course?.CourseName</td>
                    <td>@course.Course?.Institution?.InstitutionName</td>
                    <td>@course.Scholarship?.Country?.CountryName</td>
                    <td>@course.EntryYear</td>
                    <td>@course.Course?.Duration</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p class="h5 pb-5 pt-2"><em>No course has been registered for student</em></p>
}

@code{
    [Parameter] public Guid StudentId { get; set; }

    private List<StudentCourseViewModel>? courses = new ();

    protected override async Task OnInitializedAsync()
    {
        courses = await Http.GetFromJsonAsync<List<StudentCourseViewModel>>($"{NavigationManager.BaseUri}api/studentcourses?studentId={StudentId}");
    }
}